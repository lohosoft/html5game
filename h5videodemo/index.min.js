console.log('index.js');
window.onload = init();


// var globalData = {};

function init() {
    // ios or android
    globalData.ua = navigator.userAgent;
    globalData.isIphone = true;
    if (/Android (\d+\.\d+)/.test(globalData.ua)) {
        globalData.isIphone = false;
    }
    globalData.myivwrapper = document.getElementById('myivwrapper');
    globalData.progressP = document.getElementById('progressP');

    globalData.videohtmltemplate = '<video id="" src="" playsinline="true" -webkit-playsinline="true" x5-video-player-type="h5" x5-video-player-fullscreen="true" type="video/mp4"></video>'
    //detect portrait or landscape
    var utils = {
        debounce: function(func, delay) {
            var timer = null;
            return function() {
                var context = this,
                    args = arguments;
                clearTimeout(timer);
                timer = setTimeout(function() {
                    func.apply(context, args);
                }, delay);
            }
        }
    }
    globalData.recordOrient;
    // globalData.inited = false;
    window.onresize = utils.debounce(detectOrient, 300);
    detectOrient();
    myPreload();
}


function setLayout(mode) {
    if (mode === 1) {
        // landscape
        console.log('s mode ');
        globalData.myivwrapper.classList.add('myrotate90negative');
    } else {
        // portrait
        console.log('p mode');
        // alert('p');
        globalData.myivwrapper.classList.remove('myrotate90negative');
    }
};

function detectOrient() {
    var cw = document.documentElement.clientWidth;

    var _Width = 0,
        _Height = 0;
    console.log(globalData.recordOrient);
    if (!globalData.recordOrient) {
        sw = window.screen.width;
        sh = window.screen.height;
        // better way to compare width and height of screen
        _Width = sw < sh ? sw : sh;
        _Height = sw >= sh ? sw : sh;
        globalData.recordOrient = _Width + ',' + _Height;

    } else {
        var str = globalData.recordOrient.split(',');
        _Width = str[0];
        _Height = str[1];
    }
    if (cw == _Width) {
        // p mode
        // alert('p');
        globalData.orientationP = true;
        console.log('init p mode');
        setLayout(0);

        return;
    }
    if (cw == _Height) {
        globalData.orientationP = false;

        console.log('init s mode');

        // s mode
        // alert('s');
        setLayout(1);

        return;
    };
};


function myPreload() {
    globalData.startImgSrc = "./assets/start_1088x1922.png";
    globalData.sVideoSrc = "./assets/s.mp4";
    globalData.tVideoSrc = "./assets/t.mp4";
    globalData.endFile = './assets/end.txt';
    var loader = new createjs.LoadQueue(false);
    loader.loadFile(globalData.sVideoSrc);
    loader.loadFile(globalData.tVideoSrc);
    loader.loadFile(globalData.startImgSrc);
    loader.loadFile(globalData.startImgSrc);
    loader.loadFile(globalData.endFile);
    loader.on("fileload", handleFileComplete);
    loader.on("progress", handleFileProgress);
    loader.load()


};
// handle fine in each single file to load 
function handleFileComplete(event) {
    // document.body.appendChild(event.result);
    // console.log(event.item.src);
    if (event.item.src === globalData.startImgSrc) {
        console.log(' load imag src : ' + event.result);
        globalData.startImg = event.result;
    } else if (event.item.src === globalData.sVideoSrc) {
        console.log("laod s vido src :" + event.result.src);

        // globalData.sVideo = event.result;
        globalData.sVideo = htmlToElement(globalData.videohtmltemplate);
        globalData.sVideo.src = globalData.sVideoSrc;
        globalData.sVideo.id = 'sv';
    } else if (event.item.src === globalData.tVideoSrc) {
        // console.log(event.result);
        console.log("laod tvido src :" + event.result.src);

        globalData.tVideo = htmlToElement(globalData.videohtmltemplate);
        globalData.tVideo.src = globalData.tVideoSrc;
        globalData.tVideo.id = 'tv';

    }
};

function handleFileProgress(event) {
    var progress = Math.floor(event.progress * 100);
    console.log(progress + '%');
    // globalData.progressP.innerHTML = progress + '%';
    if (event.progress >= 1) {
        console.log('all file loaded');
        // globalData.progressP.parentNode.removeChild(globalData.progressP);
        myInit();
    };

};

function myInit() {
    console.log('init with loaded files');

    globalData.startImg.style.height = '100%';
    globalData.myivwrapper.appendChild(globalData.startImg);
    // init but don't dipaly videos
    globalData.sVideo.style.width = '1px';
    globalData.sVideo.style.height = "1px";

    console.log(globalData.sVideo.src);
    console.log(globalData.tVideo.src);
    globalData.tVideo.style.width = '1px';
    globalData.tVideo.style.height = "1px";
    globalData.myivwrapper.appendChild(globalData.sVideo);
    globalData.myivwrapper.appendChild(globalData.tVideo);

    myStart();
};

function myStart() {
    globalData.startImg.addEventListener('click', function(event) {
        console.log('click x ' + event.x);
        console.log('click y ' + event.y);
        console.log(globalData.orientationP);
        var v;
        if (globalData.orientationP) {
            console.log('click on p mode')

            if (event.y < window.innerHeight / 2) {
                // playVideo(globalData.tVideo.id);
                v = document.getElementById(globalData.tVideo.id);
            } else {
                // playVideo(globalData.sVideo.id);
                v = document.getElementById(globalData.sVideo.id);

            }
        } else {
            console.log('click on s mode')
            if (event.x > window.innerWidth / 2) {
                // playVideo(globalData.tVideo.id);
                v = document.getElementById(globalData.tVideo.id);

            } else {
                // playVideo(globalData.sVideo.id);
                v = document.getElementById(globalData.sVideo.id);

            }
        }
        console.log(' v playing : ' + v.id);
        v.style.height = '100%';
        v.style.width = 'auto';
        console.log(' v playing height : ' + v.style.height);

        v.addEventListener("timeupdate", function() {
            console.log('video on : ' + v.currentTime);
            if (v.currentTime >= 1.45) {
                stopVideo(v);
            };
        });
        v.play();
        globalData.startImg.style.display = 'none';

    });
};

// function handleClickOnStartImg(event) {
//     console.log('click x ' + event.x);
//     console.log('click y ' + event.y);
//     console.log(globalData.orientationP);
//     if (globalData.orientationP) {
//         if (event.y < window.innerHeight) {
//             playVideo(globalData.tVideo.id);
//         } else {
//             playVideo(globalData.sVideo.id);
//         }
//     } else {
//         if (event.x > window.innWidth) {
//             playVideo(globalData.tVideo.id);
//         } else {
//             playVideo(globalData.sVideo.id);
//         }
//     }
// };

function playVideo(vID) {
    console.log(vID);
    var v = document.getElementById(vID);

    v.style.height = '100%';
    v.style.widith = ' ';
    v.play();
    globalData.startImg.style.display = 'none';
    v.addEventListener("timeupdate", function() {
        if (v.currentTime >= 1.9) {
            stopVideo(v);
        };
    });
};

function stopVideo(v) {
    console.log('stoping ' + v);
    v.style.height = '1px';
    v.style.widith = '1px';
    globalData.startImg.style.display = 'block';
}




/**
 * @param {String} HTML representing a single element
 * @return {Element}
 */
function htmlToElement(html) {
    var template = document.createElement('template');
    template.innerHTML = html;
    return template.content.firstChild;
}


/**
 * @param {String} HTML representing any number of sibling elements
 * @return {NodeList} 
 */
function htmlToElements(html) {
    var template = document.createElement('template');
    template.innerHTML = html;
    return template.content.childNodes;
}